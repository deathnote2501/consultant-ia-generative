"""create_course_and_subscription_tables

Revision ID: 3328e85ba2bb
Revises: 3c964eefc0e6
Create Date: 2025-05-31 16:55:12.179146

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql # For UUID type if needed for user_id
from sqlalchemy.sql import func # For server_default=func.now()

# revision identifiers, used by Alembic.
revision: str = '3328e85ba2bb'
down_revision: Union[str, None] = '3c964eefc0e6' # Points to add_email_submission_fields_to_user
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create course table
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_course_id'), 'course', ['id'], unique=False)
    op.create_index(op.f('ix_course_title'), 'course', ['title'], unique=False) # Model has index=True

    # Create subscription table
    op.create_table('subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(), nullable=False),
    sa.Column('plan_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('current_period_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('current_period_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=func.now(), onupdate=func.now(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_subscription_id', name=op.f('uq_subscription_stripe_subscription_id')) # Explicit name from model
    )
    op.create_index(op.f('ix_subscription_course_id'), 'subscription', ['course_id'], unique=False)
    op.create_index(op.f('ix_subscription_current_period_end'), 'subscription', ['current_period_end'], unique=False)
    op.create_index(op.f('ix_subscription_id'), 'subscription', ['id'], unique=False)
    op.create_index(op.f('ix_subscription_status'), 'subscription', ['status'], unique=False)
    op.create_index(op.f('ix_subscription_stripe_customer_id'), 'subscription', ['stripe_customer_id'], unique=False)
    op.create_index(op.f('ix_subscription_stripe_subscription_id'), 'subscription', ['stripe_subscription_id'], unique=True) # Model has unique=True, index=True
    op.create_index(op.f('ix_subscription_user_id'), 'subscription', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_subscription_user_id'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_stripe_subscription_id'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_stripe_customer_id'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_status'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_id'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_current_period_end'), table_name='subscription')
    op.drop_index(op.f('ix_subscription_course_id'), table_name='subscription')
    op.drop_table('subscription')

    op.drop_index(op.f('ix_course_title'), table_name='course')
    op.drop_index(op.f('ix_course_id'), table_name='course')
    op.drop_table('course')
    # ### end Alembic commands ###
